variables:
  BOOST_VERSION: 1.70.0

trigger:
  branches:
    include:
      - testing/2.*

stages:
- stage: Create
  jobs:
  - job: 'Linux'
    pool:
      vmImage: 'ubuntu-16.04'
    strategy:
      matrix:
        GCC 8:
          CXX: g++-8
          CC: gcc-8
          PACKAGES: g++-8
          CONAN_SETTINGS_OPT: -s compiler=gcc
          PYVER: 3.7
          PYEXE: /usr/bin/python3.7m
    steps:
    - bash: |
          set -e
          uname -a
          sudo apt-get update
          sudo apt-get install software-properties-common apt-file
      displayName: 'Install: APT'
    - bash: |
          set -e
          uname -a
          sudo apt-add-repository -y "ppa:deadsnakes/ppa"
          sudo apt-get update
          sudo apt-get install python${PYVER}
          sudo apt-get install python${PYVER}-dev
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          sudo ${PYEXE} get-pip.py
      displayName: 'Install: Python'
    - bash: |
          set -e
          ${PYEXE} --version
      displayName: 'Info: Python'
    - bash: |
          set -e
          uname -a
          sudo apt-add-repository -y "ppa:ubuntu-toolchain-r/test"
          if test -n "${LLVM_REPO}" ; then
            wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
            sudo apt-add-repository "deb http://apt.llvm.org/xenial/ ${LLVM_REPO} main"
          fi
          sudo apt-get update
          sudo apt-get -yq --no-install-suggests --no-install-recommends install ${PACKAGES}
      displayName: 'Install: C++'
    - bash: |
          ${CXX} --version
          echo "which gcc .."
          which gcc
          echo "which g++ .."
          which g++
          echo "which clang .."
          which clang
      displayName: 'Info: C++'
    - bash: |
          set -e
          sudo pip${PYVER} install --upgrade pip
          sudo pip${PYVER} install --upgrade conan
          sudo pip${PYVER} install --upgrade https://github.com/grafikrobot/boost_lib_stats/archive/master.zip
      displayName: 'Install: PIP'
    - bash: |
          set -e
          ${PYEXE} ./src/script/clone_conan_boost.py "++repo-dir=${HOME}/conan-boost" "++version=${BOOST_VERSION}"
          pushd "${HOME}/conan-boost"
          git submodule foreach git checkout "testing/${BOOST_VERSION}"
      displayName: 'Clone'
    - bash: |
          set -e
          export "PATH=/usr/bin:${PATH}"
          ${PYEXE} ./src/script/create_all.py "++trace" "++repo-dir=${HOME}/conan-boost" "++version=${BOOST_VERSION}" ${CONAN_SETTINGS_OPT} -o "*:python=${PYEXE}"
      displayName: 'Create'

  - job: 'Windows'
    pool:
      vmImage: 'windows-2019'
    strategy:
      matrix:
        MSVC 2019:
          CONAN_SETTINGS_OPT: -s "compiler=Visual Studio" -s "compiler.version=16"
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x' 
        addToPath: true 
        architecture: 'x64'
    - powershell: |
          pip install --upgrade pip
          pip install --upgrade conan
          pip install --upgrade https://github.com/grafikrobot/boost_lib_stats/archive/master.zip
      displayName: 'Install: PIP'
    - powershell: |
          python ./src/script/clone_conan_boost.py "++repo-dir=$env:HOME/conan-boost" "++version=$env:BOOST_VERSION"
          cd "${HOME}/conan-boost"
          git submodule foreach git checkout "testing/$env:BOOST_VERSION"
      displayName: 'Clone'
    - powershell: |
          python ./src/script/create_all.py "++trace" "++repo-dir=$env:HOME/conan-boost" "++version=$env:BOOST_VERSION" $env:CONAN_SETTINGS_OPT -o "*:python=python"
      displayName: 'Create'
